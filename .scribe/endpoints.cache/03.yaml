## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/role
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"name":"super_admin","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z"},{"id":2,"name":"admin","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z"}],"message":"Role retrieved successfully."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/role
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quos
        type: string
        custom: []
      permissions:
        name: permissions
        description: ''
        required: false
        example:
          - 20
        type: 'integer[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/role/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"name":"super_admin","created_at":"06\/09\/2022","updated_at":"06\/09\/2022","permissions":[{"id":1,"name":"admin_panel_access","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":1}},{"id":2,"name":"user_approval","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":2}},{"id":3,"name":"users_access","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":3}},{"id":4,"name":"user-user_assign_role","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":4}},{"id":5,"name":"user_delete","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":5}},{"id":6,"name":"user_show_details","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":6}},{"id":7,"name":"roles_access","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":7}},{"id":8,"name":"role_edit","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":8}},{"id":9,"name":"role_delete","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":9}},{"id":10,"name":"role_create","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":10}},{"id":11,"name":"role_show","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":11}},{"id":12,"name":"permissions_access","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":12}},{"id":13,"name":"permission_edit","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":13}},{"id":14,"name":"company_access","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":14}},{"id":15,"name":"company_create","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":15}},{"id":16,"name":"company_update","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":16}},{"id":17,"name":"company_show_details","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":17}},{"id":18,"name":"company_delete","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":18}},{"id":19,"name":"equipment_access","guard_name":"web","created_at":"2022-09-06T02:24:38.000000Z","updated_at":"2022-09-06T02:24:38.000000Z","pivot":{"role_id":1,"permission_id":19}},{"id":20,"name":"category_access","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":20}},{"id":21,"name":"category_create","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":21}},{"id":22,"name":"specification_access","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":22}},{"id":23,"name":"specification_create","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":23}},{"id":24,"name":"specification_show_details","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":24}},{"id":25,"name":"specification_delete","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":25}},{"id":26,"name":"specification_update_btn","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":26}},{"id":27,"name":"unit_access","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":27}},{"id":28,"name":"unit_create","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":28}},{"id":29,"name":"unit_show_details","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":29}},{"id":30,"name":"unit_delete","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":30}},{"id":31,"name":"unit_update_btn","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":31}},{"id":32,"name":"status_access","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":32}},{"id":33,"name":"status_create","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":33}},{"id":34,"name":"status_show_details","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":34}},{"id":35,"name":"status_delete","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":35}},{"id":36,"name":"status_update_btn","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":36}},{"id":37,"name":"activity_log","guard_name":"web","created_at":"2022-09-06T02:24:39.000000Z","updated_at":"2022-09-06T02:24:39.000000Z","pivot":{"role_id":1,"permission_id":37}}]},"message":"Roles retrieved successfully."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/role/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      permissions:
        name: permissions
        description: ''
        required: false
        example:
          - 1
        type: 'integer[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/approval_request
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"employee_id":"123admin","last_name":"wq","first_name":"das","middle_name":"wqfgvgfgfg","suffix":"wgfgggfgf","email":"admin@gmail.com","role_request":null,"approved_at":null,"disapproved_at":null,"company_name":[],"email_verified_at":null,"created_at":"06\/09\/2022","updated_at":"06\/09\/2022"},{"id":12,"employee_id":"123admin11","last_name":"wq","first_name":"das","middle_name":"wqfgvgfgfg","suffix":"wgfgggfgf","email":"admi11@gmail.com","role_request":null,"approved_at":null,"disapproved_at":null,"company_name":[],"email_verified_at":null,"created_at":"06\/09\/2022","updated_at":"06\/09\/2022"}],"message":"Accounts for approval retrieved successfully."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/deactivated_account
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":3,"employee_id":"123admi3","last_name":"wq","first_name":"das","middle_name":"wqfgvgfgfg","suffix":"wgfgggfgf","email":"admin3@gmail.com","role_request":null,"approved_at":"2022-09-06 07:11:07","disapproved_at":null,"deactivated_at":"2022-09-06 07:21:52","email_verified_at":null,"created_at":"2022-09-06T05:47:57.000000Z","updated_at":"2022-09-06T07:21:52.000000Z"},{"id":6,"employee_id":"123admin5","last_name":"wq","first_name":"das","middle_name":"wqfgvgfgfg","suffix":"wgfgggfgf","email":"admin5@gmail.com","role_request":null,"approved_at":"2022-09-06 07:27:09","disapproved_at":null,"deactivated_at":"2022-09-06 07:23:24","email_verified_at":null,"created_at":"2022-09-06T07:14:54.000000Z","updated_at":"2022-09-06T07:27:09.000000Z"}],"message":"Deactivated user accounts were retrieved successfully."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/user/{requestor_id}/approve'
    metadata:
      title: 'Register approved accounts api'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      requestor_id:
        name: requestor_id
        description: 'The ID of the requestor.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/user/{requestor_id}/disapprove'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      requestor_id:
        name: requestor_id
        description: 'The ID of the requestor.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/disapproved_account
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":11,"employee_id":"123admin10","last_name":"wq","first_name":"das","middle_name":"wqfgvgfgfg","suffix":"wgfgggfgf","email":"admi10@gmail.com","role_request":null,"approved_at":null,"disapproved_at":"2022-09-06 08:13:21","company_name":["Fligno PH"],"email_verified_at":null,"created_at":"06\/09\/2022","updated_at":"06\/09\/2022"}],"message":"Disapproved accounts retrieved successfully."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/{user_id}/change_role'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      role_id:
        name: role_id
        description: ''
        required: true
        example: eos
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/{user_id}/activate'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/{user_id}/deactivate'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/user/{user_id}/admin_details'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/unit
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/unit
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      brand:
        name: brand
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      model:
        name: model
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      serial:
        name: serial
        description: ''
        required: true
        example: repellendus
        type: string
        custom: []
      details:
        name: details
        description: ''
        required: true
        example: sit
        type: string
        custom: []
      remarks:
        name: remarks
        description: ''
        required: true
        example: sunt
        type: string
        custom: []
      company_id:
        name: company_id
        description: ''
        required: true
        example: odit
        type: string
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: nulla
        type: string
        custom: []
      status_id:
        name: status_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/unit/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the unit.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/unit/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the unit.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      brand:
        name: brand
        description: ''
        required: true
        example: soluta
        type: string
        custom: []
      model:
        name: model
        description: ''
        required: true
        example: repudiandae
        type: string
        custom: []
      serial:
        name: serial
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      company_id:
        name: company_id
        description: ''
        required: true
        example: praesentium
        type: string
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      status_id:
        name: status_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/unit/{id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the unit.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/status
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/status
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dicta
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/status/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the status.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/status/{id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the status.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quasi
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/remark
    metadata:
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/remark
    metadata:
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quos
        type: string
        custom: []
      date:
        name: date
        description: ''
        required: true
        example: dicta
        type: string
        custom: []
      unit:
        name: unit
        description: ''
        required: true
        example: nam
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/remark/{id}'
    metadata:
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the remark.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/admin_list
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user/employee_list
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/activity_logs
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
